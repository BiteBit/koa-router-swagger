swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: >
    A sample API that uses a petstore as an example
    to demonstrate features in the swagger-2.0 specification
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: 'Index'
      controller:
        - file: user
          handler: isLogin
        - file: page
          handler: userPage
      parameters:
        - name: who
          in: query
          description: who visit the index
          required: true
          type: string
        - name: when
          in: query
          description: when visit the index
          required: true
          type: string
          format: email
        - name: number
          in: query
          description: when visit the index
          type: number
          format: int32
          required: true
        - name: users
          in: query
          type: array
          items:
             type: string
      responses:
        '200':
          description: Index response
          schema:
            type: string
        '201':
          description: Create response
          schema:
            type: object
            properties:
              name:
                type: string
              age:
                type: integer
                format: int32
                minimum: 0
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'


  /pets:
    get:
      description: Returns all pets from the petstore
      controller:
        - file: user
          handler: isAdmin
        - file: page
          handler: adminPage
      responses:
        '200':
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new pet in the store
      controller:
        - file: user
          handler: isLogin
        - file: page
          handler: adminPage
      # parameters:
      #   - name: pet
      #     in: body
      #     description: Pet to add to the store
      #     required: true
      #     schema:
      #       $ref: '#/definitions/pet'
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'


definitions:
  pet:
    $ref: pet.json
  pet-owner:
    $ref: pet-owner.json
  errorModel:
    $ref: error.json
